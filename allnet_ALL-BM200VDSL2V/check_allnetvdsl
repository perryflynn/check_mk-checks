#!/usr/bin/python3

import re
import requests
from requests.auth import HTTPBasicAuth
import yaml

cfg = {}
with open('/etc/check_mk/check_allnetvdsl_config.yml') as filehandle:
    cfg = yaml.load(filehandle, Loader=yaml.FullLoader)

auth = HTTPBasicAuth(cfg['user'], cfg['password'])

status = 3
statusText = "UNKNOWN"
service = ""
message = "Unkown status"
metrics = []

try:
    snmpreq = requests.get(cfg['url'] + '/snmpconfig.html', auth=auth)
    statreq = requests.get(cfg['url'] + '/statsadsl.html', auth=auth)

    try:
        namergx = re.search('sysName\.value = \'([^\']+)\';', snmpreq.text)
        locationrgx = re.search('sysLocation\.value = \'([^\']+)\';', snmpreq.text)
        service = namergx.group(1) + "_" + locationrgx.group(1)
    except:
        service = "ALLNET_Status"

    try:
        modergx = re.search('<tr><td[^>]+>Mode:</td><td>([^<]+)</td></tr>', statreq.text)
        uptimergx = re.search('<tr><td[^>]+>DSL uptime:</td><td>([^<]+)</td></tr>', statreq.text)
        statergx = re.search("<tr><td[^>]+>Status:</td><td>([^<]+)</td></tr>", statreq.text)
        message = "Mode: " + modergx.group(1) + "; State: " + statergx.group(1) + "; Uptime: " + uptimergx.group(1)

        if statergx.group(1) == "Up":
            status = 0
            statusText = "OK"
        elif statergx.group(1) != "Up":
            status = 2
            statusText = "CRITICAL"
    except:
        message = "Error: Unable to get the message infos"
        status = 2
        statusText = "CRITICAL"

    try:
        ratergx = re.search('<tr><td[^>]+>Rate \(Kbps\):</td><td>(?P<ratedown>[0-9]+)</td><td>(?P<rateup>[0-9]+)</td><td>(?P<ratedown2>[0-9]+)</td><td>(?P<rateup2>[0-9]+)</td></tr>', statreq.text)
        metrics.append('download_kbps=' + ratergx.group('ratedown'))
        metrics.append('upload_kbps=' + ratergx.group('rateup'))
    except:
        pass

    try:
        errorsrgx = re.search('<tr><td[^>]+>RS Uncorrectable Errors:</td><td>(?P<ratedown>[0-9]+)</td><td>(?P<rateup>[0-9]+)</td><td>(?P<ratedown2>[0-9]+)</td><td>(?P<rateup2>[0-9]+)</td></tr>', statreq.text)
        metrics.append('rs_errors_down=' + errorsrgx.group('ratedown'))
        metrics.append('rs_errors_up=' + errorsrgx.group('rateup'))
    except:
        pass

except:
    pass

allmetrics = "-"
if len(metrics) > 0:
    allmetrics = "|".join(metrics)

print("<<<<" + cfg['piggibackhost'] + ">>>>")
print("<<<local>>>")
print(str(status) + " " + service + " " + allmetrics + " " + message)
print("<<<<>>>>")
