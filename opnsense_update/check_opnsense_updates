#!/usr/bin/python3

import re
import requests
from requests.auth import HTTPBasicAuth
import yaml

cfg = {}
with open('/etc/check_mk/check_opnsense_updates_config.yml') as filehandle:
    cfg = yaml.load(filehandle, Loader=yaml.FullLoader)

auth = HTTPBasicAuth(cfg['key'], cfg['secret'])
statusresp = requests.get(cfg['url'] + '/api/core/firmware/status', auth=auth, verify=False)

json = statusresp.json()

os = json['os_version'] if 'os_version' in json else '-'
version = f"{json['product_id']} {json['product_version']}" if 'product_id' in json and 'product_version' in json else '-'
update_count = len(json['all_packages']) if 'all_packages' in json else -1
major_upgrade = json['upgrade_major_version'] if 'upgrade_major_version' in json else ''
update_msg = json['status_msg'] if 'status_msg' in json else 'Unknown status'

service = 'OPNSense_Updates'
status_code = 3
status_text = "UNKNOWN"
metrics = "-"

if update_count < 0:
    status_code = 2
    status_text = "CRIT"
elif major_upgrade != '':
    status_code = 1
    status_text = "WARN"
    update_msg = f"Major upgrade available: {major_upgrade}"
elif update_count == 0:
    status_code = 0
    status_text = "OK"
    metrics = "updates=0"
elif update_count > 0:
    status_code = 1
    status_text = "WARN"
    metrics = "updates=" + str(update_count)

print("<<<<aorta.mm.brickburg.de>>>>")
print("<<<local>>>")
print(f"{status_code} {service} {metrics} {status_text}: {version}; {os}; {update_msg}")
print("<<<<>>>>")
